initSidebarItems({"enum":[["CharsError","An enumeration of possible errors that can be generated from the `Chars` adapter."],["ErrorKind","A list specifying general categories of I/O error."],["SeekFrom","Enumeration of possible methods to seek within an I/O object."]],"fn":[["copy","Copies the entire contents of a reader into a writer."],["empty","Constructs a new handle to an empty reader."],["repeat","Creates an instance of a reader that infinitely repeats one byte."],["sink","Creates an instance of a writer which will successfully consume all data."]],"mod":[["prelude","The I/O Prelude"]],"struct":[["Bytes","An iterator over `u8` values of a reader."],["Chain","Adaptor to chain together two readers."],["Chars","An iterator over the `char`s of a reader."],["Cursor","A `Cursor` wraps another type and provides it with a [`Seek`] implementation."],["Empty","A reader which is always at EOF."],["Error","The error type for I/O operations of the [`Read`], [`Write`], [`Seek`], and associated traits."],["Initializer","A type used to conditionally initialize buffers passed to `Read` methods."],["Repeat","A reader which yields one byte over and over and over and over and over and..."],["Sink","A writer which will move data into the void."],["Take","Reader adaptor which limits the bytes read from an underlying reader."]],"trait":[["BufRead","A `BufRead` is a type of `Read`er which has an internal buffer, allowing it to perform extra ways of reading."],["Read","The `Read` trait allows for reading bytes from a source."],["Seek","The `Seek` trait provides a cursor which can be moved within a stream of bytes."],["Write","A trait for objects which are byte-oriented sinks."]],"type":[["Result","A specialized `Result` type for I/O operations."]]});